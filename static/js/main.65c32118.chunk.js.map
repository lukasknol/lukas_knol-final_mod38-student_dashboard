{"version":3,"sources":["components/Header.js","components/NavItem.js","components/StudentStateContext.js","components/useDashBoard.js","components/Navbar.js","components/Sort.js","components/Chart.js","components/StudentSwitch.js","components/Average.js","components/Student.js","components/Assignment.js","components/Footer.js","App.js","index.js"],"names":["Header","className","to","NavItem","name","id","path","isActive","useMediaQuery","Dropdown","Item","href","exact","style","textDecoration","activeClassName","StudentStateContext","createContext","StudentStateProvider","props","useState","assignments","data","students","dataAssignments","filterAverage","average","filter","radioBox","assignment","enjoymentRating","difficultyRating","studentsData","setStudentsData","useEffect","d3","then","updatedData","assignmentData","forEach","student","assignmentName","indexOf","push","hasOwnProperty","checked","newAssignmentObject","parseInt","difficulty","enjoyment","newStudentObject","newState","sort","Provider","value","children","useDashBoard","useContext","buildAssignments","map","labelData","amountStudents","Object","entries","item","length","test","job","parseFloat","toFixed","labels","studentCheckedCounter","averageAssignments","averageData","counter","handleCheckAssignment","asssignment","updateStudentsData","prevState","selectAllAssignments","assignmentSwitch","updateAssignment","person","filterChecked","arr","studentSwitch","updatedState","averageFilter","updateAverageFilter","setRadio","state","updateRadio","placeholder","setSort","key","sample","dataType","a","b","str2","str1","toLowerCase","sortHandler","Navbar","studentRoutes","index","assignmentRoutes","Button","variant","DropdownButton","title","Sort","condition","onChange","event","target","readOnly","type","Chart","conditionData","height","padding","width","y","stroke","strokeWidth","offset","x","datum","label","labelItem","fill","barWidth","animate","duration","onLoad","labelComponent","flyoutWidth","pointerLength","pointerWidth","flyoutStyle","fontSize","events","eventHandlers","onMouseOver","mutation","active","onMouseOut","ticks","size","strokeLinecap","strokeLinejoin","tickLabelComponent","angle","dx","dy","textAnchor","dependentAxis","domain","tickLabels","orientation","symbol","StudentSwitch","Form","Check","Average","studentSwitches","assignmentOptions","sortValue","keys","toString","sortedArr","reverse","filterAverageData","items","updateCondition","defaultValue","default","Student","useParams","filterAssignments","Assignment","studentsOverview","chartData","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65c32118.chunk.js","sourcesContent":["import React from 'react';\nimport '../styling/globals.css';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <header>\n      <div className=\"header-container\">\n        <Link className=\"header-home\" to=\"/\">\n            <div className=\"logo-name\">Studenten Dashboard</div>\n        </Link>\n      </div>\n    </header>\n  );\n};\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useMediaQuery } from '@material-ui/core';\n\nexport const NavItem = ({ name, id }) => {\n  let path = '';\n  const isActive = useMediaQuery('(max-width:1028px)');\n\n  if (id === 'student') path = `/student/${name}`;\n  if (id === 'assignment') path = `/assignment/${name}`;\n\n  return isActive ? (\n    // Navigation for tablet and mobile\n    <NavLink className=\"nav-item\" to={path}>\n      <Dropdown.Item href={path}>{name}</Dropdown.Item>\n    </NavLink>\n  ) : (\n    \n    // Navigation for desktop\n    <NavLink\n      exact\n      style={{ textDecoration: 'none' }}\n      className=\"nav-item\"\n      activeClassName=\"is-active\"\n      to={path}\n    >\n      <li>{name}</li>\n    </NavLink>\n  );\n};\n","import React, { useState, useEffect, createContext } from 'react';\nimport * as d3 from 'd3';\n\nexport const StudentStateContext = createContext();\nexport const StudentStateProvider = (props) => {\n  const [studentsData, setStudentsData] = useState({\n    assignments: [],\n    data: {},\n    students: [],\n    dataAssignments: [],\n    filterAverage: '',\n    average: {\n      filter: 'showall',\n      radioBox: {\n        assignment: true,\n        enjoymentRating: false,\n        difficultyRating: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    d3.csv('./dataMockup.csv').then((data) => {\n      let updatedData = {};\n      let assignments = [];\n      let assignmentData = {};\n      let students = [];\n\n      data.forEach((student) => {\n        const name = student.name;\n        const assignmentName = student.assignment;\n\n        if (assignments.indexOf(student.assignment) === -1) {\n          assignments.push(student.assignment);\n        }\n\n        if (!updatedData.hasOwnProperty(name)) {\n          students.push(name);\n          updatedData[name] = {\n            name: student.name,\n            radioBox: {\n              enjoymentRating: false,\n              difficultyRating: false,\n              assignment: true,\n            },\n            checked: true,\n            assignments: [],\n          };\n        }\n\n        if (!assignmentData.hasOwnProperty(assignmentName)) {\n          assignmentData[assignmentName] = {\n            assignment: student.assignment,\n            radioBox: {\n              assignment: true,\n              enjoymentRating: false,\n              difficultyRating: false,\n            },\n            students: [],\n          };\n        }\n        const newAssignmentObject = {\n          assignment: student.assignment,\n          checked: true,\n          difficultyRating: parseInt(student.difficulty),\n          enjoymentRating: parseInt(student.enjoyment),\n        };\n        const newStudentObject = {\n          name: student.name,\n          difficultyRating: parseInt(student.difficulty),\n          enjoymentRating: parseInt(student.enjoyment),\n          checked: true,\n        };\n        updatedData[name].assignments.push(newAssignmentObject);\n        assignmentData[assignmentName].students.push(newStudentObject);\n      });\n\n      const newState = {\n        assignments: assignments,\n        students: students.sort(),\n        data: updatedData,\n        dataAssignments: assignmentData,\n        average: {\n          filter: 'showall',\n          radioBox: {\n            assignment: true,\n            enjoymentRating: false,\n            difficultyRating: false,\n          },\n        },\n      };\n\n      setStudentsData(() => {\n        return newState;\n      });\n    });\n  }, []);\n\n  return (\n    <StudentStateContext.Provider value={[studentsData, setStudentsData]}>\n      {props.children}\n    </StudentStateContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { StudentStateContext } from './StudentStateContext';\n\nconst useDashBoard = () => {\n  const [studentsData, setStudentsData] = useContext(StudentStateContext);\n\n  // Include student at average assignments\n  const studentSwitch = (name) => {\n    const updatedState = { ...studentsData.data };\n    updatedState[name].checked = !updatedState[name].checked;\n\n    setStudentsData((prevState) => {\n      return { ...prevState, data: updatedState };\n    });\n  };\n  const assignmentSwitch = (student, assignment) => {\n    const updateAssignment = { ...studentsData.dataAssignments };\n    updateAssignment[assignment].students.map((person) => {\n      if (person.name === student) {\n        person.checked = !person.checked;\n      }\n      return person;\n    });\n    setStudentsData((prevState) => {\n      return { ...prevState, dataAssignments: updateAssignment };\n    });\n  };\n\n  // Build average assignments\n  const buildAssignments = [...studentsData.assignments].map((assignment) => {\n    let difficulty = 0;\n    let enjoyment = 0;\n    let labelData = [];\n\n    const amountStudents = Object.entries({ ...studentsData.data }).filter(\n      (item) => item[1].checked\n    ).length;\n\n    Object.entries({ ...studentsData.data })\n      .filter((item) => item[1].checked)\n      .forEach((item) => {\n        let test = { name: item[0] };\n        item[1].assignments.forEach((job) => {\n          if (job.assignment === assignment) {\n            test.difficultyRating = job.difficultyRating;\n            test.enjoymentRating = job.enjoymentRating;\n            difficulty += job.difficultyRating;\n            enjoyment += job.enjoymentRating;\n          }\n        });\n        labelData.push(test);\n      });\n    return {\n      assignment: assignment,\n      difficultyRating:\n        difficulty > 0 && parseFloat((difficulty / amountStudents).toFixed(2)),\n      enjoymentRating:\n        enjoyment > 0 && parseFloat((enjoyment / amountStudents).toFixed(2)),\n      labels: labelData,\n    };\n  });\n\n  // Sort and filter functions\n  const stringCompare = (str1, str2) => {\n    str1 = str1.toLowerCase();\n    str2 = str2.toLowerCase();\n\n    if (str1 > str2) return 1;\n    if (str2 > str1) return -1;\n    return 0;\n  };\n  const numCompare = (num1, num2) => num1 - num2;\n\n  const sortHandler = (sample, key) => {\n    const dataType = typeof sample;\n    const sortArray = (a, b) => {\n      a = a[key];\n      b = b[key];\n      if (dataType === 'string') return stringCompare(a, b);\n      if (dataType === 'number') return numCompare(a, b);\n    };\n    return sortArray;\n  };\n\n  const setSort = (key, arr) => {\n    const sample = arr[0][key];\n    return arr.sort(sortHandler(sample, key));\n  };\n\n  const averageFilter = (value) => {\n    const updateAverageFilter = { ...studentsData.average };\n    updateAverageFilter.filter = value;\n    setStudentsData((prevState) => {\n      return { ...prevState, average: updateAverageFilter };\n    });\n  };\n\n  const studentCheckedCounter = Object.entries(studentsData.data).filter(\n    (item) => item[1].checked\n  ).length;\n\n  // Handle checkboxes and radio buttons\n  const handleCheckAssignment = (asssignment, name) => {\n    const updateStudentsData = { ...studentsData.data };\n    updateStudentsData[name].assignments.map((item) => {\n      if (item.assignment === asssignment.assignment) {\n        item.checked = !item.checked;\n        return item;\n      }\n      return item;\n    });\n    setStudentsData((prevState) => {\n      return { ...prevState, data: updateStudentsData };\n    });\n  };\n  const selectAllAssignments = (name) => {\n    const updateStudentsData = { ...studentsData.data };\n    updateStudentsData[name].assignments.map(\n      (item) => (item.checked = !item.checked)\n    );\n    setStudentsData((prevState) => {\n      return { ...prevState, data: updateStudentsData };\n    });\n  };\n  const filterChecked = (arr) => {\n    return arr.filter((item) => item.checked);\n  };\n\n  const setRadio = (value, state, data, name) => {\n    const updateRadio = { ...state };\n    const placeholder = name\n      ? updateRadio[data][name].radioBox\n      : updateRadio[data].radioBox;\n    //Reset radio buttons\n    placeholder.enjoymentRating = false;\n    placeholder.difficultyRating = false;\n    placeholder.assignment = false;\n    //Set new value\n    placeholder[value] = !placeholder[value];\n    //update state\n    setStudentsData(() => {\n      return updateRadio;\n    });\n  };\n\n  return {\n    dataAssignments: studentsData.dataAssignments,\n    assignments: studentsData.assignments,\n    averageAssignments: buildAssignments,\n    averageData: studentsData.average,\n    students: studentsData.students,\n    counter: studentCheckedCounter,\n    studentsData: studentsData,\n    data: studentsData.data,\n    handleCheckAssignment,\n    selectAllAssignments,\n    assignmentSwitch,\n    filterChecked,\n    studentSwitch,\n    averageFilter,\n    setRadio,\n    setSort,\n  };\n};\n\nexport default useDashBoard;\n","import React from 'react';\nimport '../styling/globals.css';\nimport { NavItem } from './NavItem';\nimport useDashBoard from './useDashBoard';\nimport { NavLink } from 'react-router-dom';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport { useMediaQuery } from '@material-ui/core';\n\nconst Navbar = () => {\n  const { students, assignments } = useDashBoard();\n  const isActive = useMediaQuery('(max-width:1028px)');\n\n  // Students routing\n  const studentRoutes = students.map((person, index) => {\n    return <NavItem name={person} id={'student'} key={index} />;\n  });\n\n  // Assignments routing\n  const assignmentRoutes = assignments.map((assignment, index) => {\n    return <NavItem name={assignment} id={'assignment'} key={index} />;\n  });\n\n  return (\n    <nav>\n      {isActive ? (\n        // Render navbar for Mobile\n        <div className=\"nav-container\">\n          <div className=\"students-overview-average\">\n            {/* Button 1 */}\n            <NavLink exact className=\"nav-item\" to=\"/\">\n              {' '}\n              <Button href=\"/\" variant=\"primary\" id=\"dropdown-basic-button\">\n                Alle studenten\n              </Button>\n            </NavLink>\n            {/* button 2 */}\n            <DropdownButton id=\"dropdown-basic-button\" title=\"Studenten\">\n              {studentRoutes}\n            </DropdownButton>\n            {/* button 3 */}\n            <DropdownButton id=\"dropdown-basic-button\" title=\"Opdrachten\">\n              {assignmentRoutes}\n            </DropdownButton>\n            {/* button 4 */}\n          </div>\n        </div>\n      ) : (\n        //Render navbar for desktop\n        <div className=\"nav-container-desktop\">\n          <div className=\"nav-wrapper\">\n            <div className=\"nav-group\">\n              <h3>Overzicht</h3>\n              <ul className=\"all-students\">\n                <li>\n                  <NavLink\n                    exact\n                    className=\"nav-item\"\n                    activeClassName=\"is-active\"\n                    to=\"/\"\n                  >\n                    Alle studenten\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n            <div className=\"nav-group\">\n              <h3>Studenten</h3>\n              <ul>{studentRoutes}</ul>\n            </div>\n            <div className=\"nav-group\">\n              <h3>Opdrachten</h3>\n              <ul className=\"nav-assignments\">{assignmentRoutes}</ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\nexport default Navbar;\n","import React from 'react';\nimport '../styling/globals.css';\nimport useDashBoard from './useDashBoard';\n\nconst Sort = ({ state, data, name, condition }) => {\n  const { setRadio } = useDashBoard();\n  const checked = name ? state[data][name] : state[data];\n\n  return (\n    <form\n      className=\"sort-form\"\n      onChange={(event) => {\n        const value = event.target.value;\n        setRadio(value, state, data, name);\n      }}\n    >\n      <label>\n        <input\n          readOnly\n          checked={checked.radioBox.enjoymentRating}\n          type=\"radio\"\n          name=\"radio\"\n          value=\"enjoymentRating\"\n        />\n        Sorteer op plezier\n      </label>\n      <label>\n        <input\n          readOnly\n          checked={checked.radioBox.difficultyRating}\n          type=\"radio\"\n          name=\"radio\"\n          value=\"difficultyRating\"\n        />\n        Sorteer op moeilijkheid\n      </label>\n      <label>\n        <input\n          readOnly\n          checked={checked.radioBox.assignment}\n          type=\"radio\"\n          name=\"radio\"\n          value=\"assignment\"\n        />\n        Sorteer op {condition === 'name' ? 'naam' : 'opdracht'}\n      </label>\n    </form>\n  );\n};\n\nexport default Sort;\n","import React from 'react';\nimport '../styling/globals.css';\n\nimport {\n  VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTooltip,\n  VictoryLine,\n  VictoryGroup,\n  VictoryLabel,\n  VictoryLegend,\n} from 'victory';\n\nconst Chart = ({ data }) => {\n  const conditionData = data;\n\n  return (\n    <>\n      <VictoryChart height={160} padding={30} width={500}>\n        <VictoryLine\n          y={() => 1}\n          style={{\n            data: {\n              stroke: 'white',\n              strokeWidth: 0.2,\n            },\n          }}\n        />\n        <VictoryLine\n          y={() => 2}\n          style={{\n            data: {\n              stroke: 'white',\n              strokeWidth: 0.2,\n            },\n          }}\n        />\n        <VictoryLine\n          y={() => 3}\n          style={{\n            data: {\n              stroke: 'white',\n              strokeWidth: 0.2,\n            },\n          }}\n        />\n        <VictoryLine\n          y={() => 4}\n          style={{\n            data: {\n              stroke: 'white',\n              strokeWidth: 0.2,\n            },\n          }}\n        />\n        <VictoryLine\n          y={() => 5}\n          style={{\n            data: {\n              stroke: 'white',\n              strokeWidth: 0.3,\n            },\n          }}\n        />\n        <VictoryLine\n          y={() => 4.5}\n          style={{\n            data: {\n              stroke: 'white',\n              strokeWidth: 0.1,\n            },\n          }}\n        />\n        <VictoryLine\n          y={() => 0.5}\n          style={{\n            data: {\n              stroke: 'white',\n              strokeWidth: 0.1,\n            },\n          }}\n        />\n        <VictoryLine\n          y={() => 1.5}\n          style={{\n            data: {\n              stroke: 'white',\n              strokeWidth: 0.1,\n            },\n          }}\n        />\n        <VictoryLine\n          y={() => 2.5}\n          style={{\n            data: {\n              stroke: 'white',\n              strokeWidth: 0.1,\n            },\n          }}\n        />\n        <VictoryLine\n          y={() => 3.5}\n          style={{\n            data: {\n              stroke: 'white',\n              strokeWidth: 0.1,\n            },\n          }}\n        />\n        <VictoryGroup offset={160 / conditionData.length}>\n          <VictoryBar\n            data={conditionData}\n            x={'assignment'}\n            y={'difficultyRating'}\n            labels={({ datum }) => {\n              if (datum.labels) {\n                let label = '';\n                datum.labels.forEach((name) => {\n                  let labelItem = `${name.name}: ${name.difficultyRating} \\n`;\n                  label += labelItem;\n                });\n\n                return `Moeilijkheid gem.: ${datum.difficultyRating}\\n  \\n${label}`;\n              }\n              return `Moeilijkheid beoordeling:${datum.difficultyRating}`;\n            }}\n            style={{ data: { fill: '#263749' } }}\n            barWidth={130 / conditionData.length}\n            animate={{\n              duration: 700,\n              onLoad: { duration: 700 },\n            }}\n            labelComponent={\n              <VictoryTooltip\n                flyoutWidth={70}\n                pointerLength={9}\n                pointerWidth={2}\n                flyoutStyle={{\n                  stroke: '#ff0000',\n                  strokeWidth: 0.2,\n                  fill: 'white',\n                }}\n                style={{\n                  fontSize: 5,\n                  fill: '#263749',\n                }}\n              />\n            }\n            events={[\n              {\n                target: 'data',\n                eventHandlers: {\n                  onMouseOver: () => {\n                    return [\n                      {\n                        target: 'data',\n                        mutation: () => ({\n                          style: {\n                            fill: '#ff0000',\n                            stroke: 'black',\n                            strokeWidth: '0.1',\n                          },\n                        }),\n                      },\n                      {\n                        target: 'labels',\n                        mutation: () => ({\n                          active: true,\n                        }),\n                      },\n                    ];\n                  },\n                  onMouseOut: () => {\n                    return [\n                      {\n                        target: 'data',\n                        mutation: () => {},\n                      },\n                      {\n                        target: 'labels',\n                        mutation: () => ({\n                          active: false,\n                        }),\n                      },\n                    ];\n                  },\n                },\n              },\n            ]}\n          />\n          <VictoryBar\n            data={conditionData}\n            x={'assignment'}\n            y={'enjoymentRating'}\n            style={{ data: { fill: '#81c0ff' } }}\n            barWidth={130 / conditionData.length}\n            animate={{\n              duration: 500,\n              onLoad: { duration: 500 },\n            }}\n            labels={({ datum }) => {\n              if (datum.labels) {\n                let label = '';\n                datum.labels.forEach((name) => {\n                  let labelItem = `${name.name}: ${name.enjoymentRating} \\n`;\n                  label += labelItem;\n                });\n                return `Plezier gem.: ${datum.enjoymentRating}\\n \\n${label}`;\n              }\n              return `Plezier beoordeling: ${datum.enjoymentRating}`;\n            }}\n            labelComponent={\n              <VictoryTooltip\n                flyoutWidth={60}\n                pointerLength={9}\n                pointerWidth={1}\n                flyoutStyle={{\n                  stroke: '#fff600',\n                  strokeWidth: 0.2,\n                  fill: 'white',\n                }}\n                style={{\n                  fontSize: 5,\n                  fill: '#263749',\n                }}\n              />\n            }\n            events={[\n              {\n                target: 'data',\n                eventHandlers: {\n                  onMouseOver: () => {\n                    return [\n                      {\n                        target: 'data',\n                        mutation: () => ({\n                          style: {\n                            fill: '#fff600',\n                            stroke: 'black',\n                            strokeWidth: '0.1',\n                          },\n                        }),\n                      },\n                      {\n                        target: 'labels',\n                        mutation: () => ({\n                          active: true,\n                        }),\n                      },\n                    ];\n                  },\n                  onMouseOut: () => {\n                    return [\n                      {\n                        target: 'data',\n                        mutation: () => {},\n                      },\n                      {\n                        target: 'labels',\n                        mutation: () => ({\n                          active: false,\n                        }),\n                      },\n                    ];\n                  },\n                },\n              },\n            ]}\n          />\n        </VictoryGroup>\n        <VictoryAxis\n          style={{\n            ticks: {\n              fill: 'transparent',\n              size: 2,\n              stroke: 'black',\n              strokeWidth: 1,\n              strokeLinecap: 'round',\n              strokeLinejoin: 'round',\n            },\n          }}\n          tickLabelComponent={\n            <VictoryLabel\n              angle={() => {\n                return conditionData.length < 16 ? 0 : 60;\n              }}\n              dx={-8.5}\n              dy={-6}\n              style={{\n                fontSize: 5,\n                fill: '#263749',\n              }}\n              textAnchor={'start'}\n            />\n          }\n        />\n\n        <VictoryAxis\n          dependentAxis\n          domain={[0, 5]}\n          style={{\n            tickLabels: {\n              fontSize: 5,\n              fill: '#263749',\n            },\n          }}\n        />\n        <VictoryLegend\n          x={200}\n          y={10}\n          orientation=\"horizontal\"\n          data={[\n            {\n              name: 'Moeilijkheid',\n              symbol: { fill: '#263749', type: 'square' },\n            },\n            {\n              name: 'Plezier',\n              symbol: { fill: '#81c0ff', type: 'square' },\n            },\n          ]}\n          style={{\n            labels: {\n              fontSize: 6,\n              fill: '#120faa',\n            },\n          }}\n        />\n      </VictoryChart>\n    </>\n  );\n};\nexport default Chart;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport useDashBoard from './useDashBoard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport const StudentSwitch = ({ name, id, assignment, student }) => {\n  const { studentSwitch, data, handleCheckAssignment, assignmentSwitch } =\n    useDashBoard();\n\n  switch (id) {\n    case 'student':\n      return (\n        <li>\n          <Form.Check\n            name=\"my-checkbox\"\n            checked={data[name].checked}\n            onChange={() => {\n              studentSwitch(name);\n            }}\n            type=\"switch\"\n            id={name}\n            label={name}\n          />\n        </li>\n      );\n\n    case 'assignment':\n      return (\n        <option className=\"select-option\" value={name}>\n          {name}\n        </option>\n      );\n    case 'filter-assignment':\n      return (\n        <li>\n          <label>\n            <input\n              checked={assignment.checked}\n              onChange={() => {\n                handleCheckAssignment(assignment, name);\n              }}\n              type=\"checkbox\"\n              value={assignment.assignment}\n            />{' '}\n            {assignment.assignment}\n          </label>\n        </li>\n      );\n    case 'studentOverview':\n      return (\n        <li>\n          <Form.Check\n            onChange={() => assignmentSwitch(student.name, name)}\n            checked={student.checked}\n            type=\"switch\"\n            id={student.name}\n            label={student.name}\n          />\n        </li>\n      );\n\n    default:\n      break;\n  }\n};\n","import React from 'react';\nimport Sort from './Sort';\nimport Chart from './Chart';\nimport '../styling/globals.css';\nimport useDashBoard from './useDashBoard';\nimport { StudentSwitch } from './StudentSwitch';\n\nconst Average = () => {\n  const {\n    setSort,\n    counter,\n    students,\n    averageData,\n    assignments,\n    studentsData,\n    averageFilter,\n    averageAssignments,\n  } = useDashBoard();\n\n  // Student switch buttons\n  const studentSwitches = students.map((person, index) => {\n    return <StudentSwitch id={'student'} key={index} name={person} />;\n  });\n  //Assignment dropdown menu\n  const assignmentOptions = assignments.map((assignment, index) => {\n    return <StudentSwitch id={'assignment'} key={index} name={assignment} />;\n  });\n  //Sort and filter options\n  const keys = Object.keys(studentsData.average.radioBox);\n  const sortValue = keys\n    .filter((key) => studentsData.average.radioBox[key])\n    .toString();\n\n  const sortedArr =\n    averageAssignments.length > 0 &&\n    setSort(sortValue, averageAssignments, studentsData.average.reverse);\n\n  const filterAverageData = averageAssignments.filter((items) => {\n    return items.assignment === averageData.filter;\n  });\n\n  const dataCondition = () => {\n    if (averageData.filter === 'showall') {\n      return sortedArr;\n    } else {\n      return filterAverageData;\n    }\n  };\n  const updateCondition = dataCondition();\n\n  return (\n    <div className=\"average\">\n      <div className=\"average-container\">\n        <div className=\"average-header\">\n          Beoordelingen van alle studenten\n        </div>\n        <div className=\"stylewrapper\">\n          <div className=\"student-switches\">\n            <div className=\"banner\">\n              Selecteer minimaal twee studenten om de resultaten te vergelijken\n              (<span>{counter}</span>)\n            </div>\n            <ul>{studentSwitches}</ul>\n          </div>\n          {filterAverageData.length !== 1 ? (\n            <div className=\"sort-option\">\n              <div className=\"banner-sort\">Sorteeropties</div>\n              <Sort state={studentsData} data=\"average\" />\n            </div>\n          ) : null}\n\n          <div className=\"assignment-options\">\n            <div className=\"assignment-banner\">\n              Selecteer opdracht. Geselecteerd:\n              {studentsData.average.filter === 'showall' ? (\n                <span> {assignments.length} </span>\n              ) : (\n                <span> {studentsData.average.filter}</span>\n              )}\n            </div>\n            <select\n              defaultValue={studentsData.average.filter}\n              onChange={(event) => {\n                averageFilter(event.target.value);\n              }}\n            >\n              <option default value=\"showall\">\n                ▼ Alle opdrachten (56)\n              </option>\n              {assignmentOptions}\n            </select>\n          </div>\n        </div>\n        <div className=\"chart\">\n          {updateCondition.length > 0 && <Chart data={updateCondition} />}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Average;\n","import React from 'react';\nimport Sort from './Sort';\nimport Chart from './Chart';\nimport '../styling/globals.css';\nimport Form from 'react-bootstrap/Form';\nimport useDashBoard from './useDashBoard';\nimport { useParams } from 'react-router-dom';\nimport { StudentSwitch } from './StudentSwitch';\n\nconst Student = () => {\n  const { name } = useParams();\n  const { data, filterChecked, setSort, selectAllAssignments, studentsData } =\n    useDashBoard();\n\n  //Assignment checkboxes\n  const filterAssignments = data[name].assignments.map((assignment, index) => {\n    return (\n      <StudentSwitch\n        id={'filter-assignment'}\n        key={index}\n        assignment={assignment}\n        name={name}\n      />\n    );\n  });\n  //Sort and filter options\n  const keys = Object.keys(data[name].radioBox);\n  const sortValue = keys.filter((key) => data[name].radioBox[key]).toString();\n\n  const updatedData = filterChecked(data[name].assignments);\n  const sortedArr =\n    updatedData.length > 0 ? setSort(sortValue, updatedData) : updatedData;\n  const counter = data[name].assignments.length;\n\n  return (\n    <div className=\"student\">\n      <div className=\"student-container\">\n        <div className=\"student-header\">\n          Resultaten van<span> {name}</span>\n        </div>\n        <div className=\"student-options\">\n          <div className=\"banner-lines\">\n            <div className=\"banner\">\n              <div>\n                Selecteer opdracht. Totaal: <span> {sortedArr.length} </span>\n                van <span> {counter} </span>\n              </div>\n            </div>\n            <ul className=\"filter-ul\">{filterAssignments}</ul>\n            <div className=\"filter-switch\">\n              <Form.Check\n                className=\"switch-inv\"\n                onChange={() => {\n                  selectAllAssignments(name);\n                }}\n                type=\"switch\"\n                id=\"student-switch\"\n                label=\"(De)selecteer alles\"\n              />\n            </div>\n          </div>\n\n          <div className=\"sort-wrapper\">\n            {sortedArr.length >= 2 && (\n              <div className=\"sort-option\">\n                <div className=\"banner-sort\">Sorteeropties</div>\n                <Sort state={studentsData} data=\"data\" name={name} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"chart\">\n        {sortedArr.length > 0 && <Chart data={sortedArr} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Student;\n","import React from 'react';\nimport Sort from './Sort';\nimport Chart from './Chart';\nimport '../styling/globals.css';\nimport useDashBoard from './useDashBoard';\nimport { useParams } from 'react-router-dom';\nimport { StudentSwitch } from './StudentSwitch';\n\nconst Assignment = () => {\n  const { name } = useParams();\n  const { dataAssignments, studentsData, setSort } = useDashBoard();\n  const path = dataAssignments[name].students;\n\n  // Creating switch buttons\n  const studentsOverview = dataAssignments[name].students.map(\n    (student, index) => {\n      return (\n        <StudentSwitch\n          id={'studentOverview'}\n          key={index}\n          student={student}\n          name={name}\n        />\n      );\n    }\n  );\n\n  const chartData =\n    path.length > 0 &&\n    path\n      .filter((student) => student.checked)\n      .map((student) => {\n        student['assignment'] = student['name'];\n        return student;\n      });\n\n  const counter = chartData.length;\n  const keys = Object.keys(dataAssignments[name].radioBox);\n  const sortValue = keys\n    .filter((key) => dataAssignments[name].radioBox[key])\n    .toString();\n  const sortedArr = counter > 0 && setSort(sortValue, chartData);\n\n  return (\n    <div className=\"assignment-container\">\n      <div className=\"assignment\">\n        <div className=\"assignment-header\">\n          Resultaten per opdracht:<span> {name}</span>\n        </div>\n        <div className=\"student-switches\">\n          <div className=\"banner\">\n            Selecteer minimaal twee studenten om de resultaten te vergelijken\n            (<span>{counter}</span>)\n          </div>\n          <ul>{studentsOverview}</ul>\n        </div>\n        <div className=\"sort-wrapper\">\n          {sortedArr.length > 0 && (\n            <div className=\"wrapper\">\n              <div className=\"sort-option\">\n                <div className=\"banner-sort\">Sorteeropties</div>\n                <Sort\n                  state={studentsData}\n                  data=\"dataAssignments\"\n                  name={name}\n                  condition={'name'}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"chart\">\n        <Chart data={sortedArr} />\n      </div>\n    </div>\n  );\n};\nexport default Assignment;\n","import React from 'react';\nimport '../styling/globals.css';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p className=\"naw\">Lukas Knol - Eindopdracht Winc Acamdey</p>\n    </div>\n  );\n};\nexport default Footer;\n","import React from 'react';\nimport Header from './components/Header';\nimport Navbar from './components/Navbar';\nimport Average from './components/Average';\nimport Student from './components/Student';\nimport Assignment from './components/Assignment';\nimport Footer from './components/Footer';\nimport { StudentStateProvider } from './components/StudentStateContext';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <StudentStateProvider>\n          <Header />\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\">\n              <Average />\n            </Route>\n            <Route exact path=\"/student/:name\">\n              <Student />\n            </Route>\n            <Route exact path=\"/assignment/:name\">\n              <Assignment />\n            </Route>\n          </Switch>\n          <Footer />\n        </StudentStateProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import App from './App';\nimport React from 'react';\nimport './styling/globals.css';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}